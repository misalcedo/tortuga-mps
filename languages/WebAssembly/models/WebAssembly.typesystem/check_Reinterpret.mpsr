<?xml version="1.0" encoding="UTF-8"?>
<model ref="r:2d100c56-b572-41d0-8307-c303ded80713(WebAssembly.typesystem)" content="root">
  <persistence version="9" />
  <imports>
    <import index="aqb7" ref="r:c0f59883-361d-4b09-be24-39e7ad8052de(WebAssembly.structure)" implicit="true" />
    <import index="fhke" ref="r:3c88a241-a733-45bd-86ef-c4f3f5d018a1(WebAssembly.behavior)" implicit="true" />
  </imports>
  <registry>
    <language id="f3061a53-9226-4cc5-a443-f952ceaf5816" name="jetbrains.mps.baseLanguage">
      <concept id="1197027756228" name="jetbrains.mps.baseLanguage.structure.DotExpression" flags="nn" index="2OqwBi">
        <child id="1197027771414" name="operand" index="2Oq$k0" />
        <child id="1197027833540" name="operation" index="2OqNvi" />
      </concept>
      <concept id="1070475926800" name="jetbrains.mps.baseLanguage.structure.StringLiteral" flags="nn" index="Xl_RD">
        <property id="1070475926801" name="value" index="Xl_RC" />
      </concept>
      <concept id="1225271221393" name="jetbrains.mps.baseLanguage.structure.NPENotEqualsExpression" flags="nn" index="17QLQc" />
      <concept id="1225271283259" name="jetbrains.mps.baseLanguage.structure.NPEEqualsExpression" flags="nn" index="17R0WA" />
      <concept id="1068580123157" name="jetbrains.mps.baseLanguage.structure.Statement" flags="nn" index="3clFbH" />
      <concept id="1068580123159" name="jetbrains.mps.baseLanguage.structure.IfStatement" flags="nn" index="3clFbJ">
        <child id="1068580123160" name="condition" index="3clFbw" />
        <child id="1068580123161" name="ifTrue" index="3clFbx" />
      </concept>
      <concept id="1068580123136" name="jetbrains.mps.baseLanguage.structure.StatementList" flags="sn" stub="5293379017992965193" index="3clFbS">
        <child id="1068581517665" name="statement" index="3cqZAp" />
      </concept>
      <concept id="1204053956946" name="jetbrains.mps.baseLanguage.structure.IMethodCall" flags="ng" index="1ndlxa">
        <reference id="1068499141037" name="baseMethodDeclaration" index="37wK5l" />
      </concept>
      <concept id="1081773326031" name="jetbrains.mps.baseLanguage.structure.BinaryOperation" flags="nn" index="3uHJSO">
        <child id="1081773367579" name="rightExpression" index="3uHU7w" />
        <child id="1081773367580" name="leftExpression" index="3uHU7B" />
      </concept>
    </language>
    <language id="7a5dda62-9140-4668-ab76-d5ed1746f2b2" name="jetbrains.mps.lang.typesystem">
      <concept id="1175517767210" name="jetbrains.mps.lang.typesystem.structure.ReportErrorStatement" flags="nn" index="2MkqsV">
        <child id="1175517851849" name="errorString" index="2MkJ7o" />
      </concept>
      <concept id="1195213580585" name="jetbrains.mps.lang.typesystem.structure.AbstractCheckingRule" flags="ig" index="18hYwZ">
        <child id="1195213635060" name="body" index="18ibNy" />
      </concept>
      <concept id="1195214364922" name="jetbrains.mps.lang.typesystem.structure.NonTypesystemRule" flags="ig" index="18kY7G" />
      <concept id="3937244445246642777" name="jetbrains.mps.lang.typesystem.structure.AbstractReportStatement" flags="ng" index="1urrMJ">
        <child id="3937244445246642781" name="nodeToReport" index="1urrMF" />
      </concept>
      <concept id="1174642788531" name="jetbrains.mps.lang.typesystem.structure.ConceptReference" flags="ig" index="1YaCAy">
        <reference id="1174642800329" name="concept" index="1YaFvo" />
      </concept>
      <concept id="1174648085619" name="jetbrains.mps.lang.typesystem.structure.AbstractRule" flags="ng" index="1YuPPy">
        <child id="1174648101952" name="applicableNode" index="1YuTPh" />
      </concept>
      <concept id="1174650418652" name="jetbrains.mps.lang.typesystem.structure.ApplicableNodeReference" flags="nn" index="1YBJjd">
        <reference id="1174650432090" name="applicableNode" index="1YBMHb" />
      </concept>
    </language>
    <language id="7866978e-a0f0-4cc7-81bc-4d213d9375e1" name="jetbrains.mps.lang.smodel">
      <concept id="1179409122411" name="jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall" flags="nn" index="2qgKlT" />
      <concept id="1138056022639" name="jetbrains.mps.lang.smodel.structure.SPropertyAccess" flags="nn" index="3TrcHB">
        <reference id="1138056395725" name="property" index="3TsBF5" />
      </concept>
      <concept id="1138056143562" name="jetbrains.mps.lang.smodel.structure.SLinkAccess" flags="nn" index="3TrEf2">
        <reference id="1138056516764" name="link" index="3Tt5mk" />
      </concept>
    </language>
    <language id="ceab5195-25ea-4f22-9b92-103b95ca8c0c" name="jetbrains.mps.lang.core">
      <concept id="1133920641626" name="jetbrains.mps.lang.core.structure.BaseConcept" flags="ng" index="2VYdi">
        <property id="1193676396447" name="virtualPackage" index="3GE5qa" />
      </concept>
      <concept id="1169194658468" name="jetbrains.mps.lang.core.structure.INamedConcept" flags="ng" index="TrEIO">
        <property id="1169194664001" name="name" index="TrG5h" />
      </concept>
    </language>
  </registry>
  <node concept="18kY7G" id="3g6cb6bSATK">
    <property role="TrG5h" value="check_Reinterpret" />
    <property role="3GE5qa" value="instructions.numeric" />
    <node concept="3clFbS" id="3g6cb6bSATL" role="18ibNy">
      <node concept="3clFbJ" id="3g6cb6bSATR" role="3cqZAp">
        <node concept="17QLQc" id="3g6cb6bSCDX" role="3clFbw">
          <node concept="2OqwBi" id="3g6cb6bSB_X" role="3uHU7B">
            <node concept="2OqwBi" id="3g6cb6bSBdP" role="2Oq$k0">
              <node concept="1YBJjd" id="3g6cb6bSAU3" role="2Oq$k0">
                <ref role="1YBMHb" node="3g6cb6bSATN" resolve="reinterpret" />
              </node>
              <node concept="3TrEf2" id="3g6cb6bSBpz" role="2OqNvi">
                <ref role="3Tt5mk" to="aqb7:5_S81t4w05U" resolve="type" />
              </node>
            </node>
            <node concept="2qgKlT" id="3g6cb6bSBK_" role="2OqNvi">
              <ref role="37wK5l" to="fhke:5_S81t4toCo" resolve="getBitWidth" />
            </node>
          </node>
          <node concept="2OqwBi" id="3g6cb6bSD33" role="3uHU7w">
            <node concept="2OqwBi" id="3g6cb6bSCPP" role="2Oq$k0">
              <node concept="1YBJjd" id="3g6cb6bSCEE" role="2Oq$k0">
                <ref role="1YBMHb" node="3g6cb6bSATN" resolve="reinterpret" />
              </node>
              <node concept="3TrEf2" id="3g6cb6bSCQT" role="2OqNvi">
                <ref role="3Tt5mk" to="aqb7:3g6cb6bSv20" resolve="from" />
              </node>
            </node>
            <node concept="2qgKlT" id="3g6cb6bSD4T" role="2OqNvi">
              <ref role="37wK5l" to="fhke:5_S81t4toCo" resolve="getBitWidth" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="3g6cb6bSATT" role="3clFbx">
          <node concept="2MkqsV" id="3g6cb6bVrSO" role="3cqZAp">
            <node concept="Xl_RD" id="3g6cb6bVrT0" role="2MkJ7o">
              <property role="Xl_RC" value="The bit-width of the value type must match." />
            </node>
            <node concept="1YBJjd" id="3g6cb6bVrUA" role="1urrMF">
              <ref role="1YBMHb" node="3g6cb6bSATN" resolve="reinterpret" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFbJ" id="3g6cb6bVs0H" role="3cqZAp">
        <node concept="17R0WA" id="3g6cb6bVBIW" role="3clFbw">
          <node concept="2OqwBi" id="3g6cb6bVs0P" role="3uHU7B">
            <node concept="2OqwBi" id="3g6cb6bVs0Q" role="2Oq$k0">
              <node concept="1YBJjd" id="3g6cb6bVs0R" role="2Oq$k0">
                <ref role="1YBMHb" node="3g6cb6bSATN" resolve="reinterpret" />
              </node>
              <node concept="3TrEf2" id="3g6cb6bVs0S" role="2OqNvi">
                <ref role="3Tt5mk" to="aqb7:5_S81t4w05U" resolve="type" />
              </node>
            </node>
            <node concept="3TrcHB" id="3g6cb6bVs0T" role="2OqNvi">
              <ref role="3TsBF5" to="aqb7:3g6cb6bSF5g" resolve="type" />
            </node>
          </node>
          <node concept="2OqwBi" id="3g6cb6bVs0K" role="3uHU7w">
            <node concept="2OqwBi" id="3g6cb6bVs0L" role="2Oq$k0">
              <node concept="1YBJjd" id="3g6cb6bVs0M" role="2Oq$k0">
                <ref role="1YBMHb" node="3g6cb6bSATN" resolve="reinterpret" />
              </node>
              <node concept="3TrEf2" id="3g6cb6bVs0N" role="2OqNvi">
                <ref role="3Tt5mk" to="aqb7:3g6cb6bSv20" resolve="from" />
              </node>
            </node>
            <node concept="3TrcHB" id="3g6cb6bVs0O" role="2OqNvi">
              <ref role="3TsBF5" to="aqb7:3g6cb6bSF5g" resolve="type" />
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="3g6cb6bVs15" role="3clFbx">
          <node concept="2MkqsV" id="3g6cb6bVs16" role="3cqZAp">
            <node concept="Xl_RD" id="3g6cb6bVs17" role="2MkJ7o">
              <property role="Xl_RC" value="The value must be reinterpreted from float to integer or vice-versa." />
            </node>
            <node concept="1YBJjd" id="3g6cb6bVs18" role="1urrMF">
              <ref role="1YBMHb" node="3g6cb6bSATN" resolve="reinterpret" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFbH" id="3g6cb6bVrVJ" role="3cqZAp" />
    </node>
    <node concept="1YaCAy" id="3g6cb6bSATN" role="1YuTPh">
      <property role="TrG5h" value="reinterpret" />
      <ref role="1YaFvo" to="aqb7:3g6cb6bSv1X" resolve="Reinterpret" />
    </node>
  </node>
</model>

