package WebAssembly.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptExpression = createDescriptorForExpression();
  /*package*/ final ConceptDescriptor myConceptIdentifier = createDescriptorForIdentifier();
  /*package*/ final ConceptDescriptor myConceptImport = createDescriptorForImport();
  /*package*/ final ConceptDescriptor myConceptModule = createDescriptorForModule();
  /*package*/ final ConceptDescriptor myConceptParameter = createDescriptorForParameter();
  /*package*/ final ConceptDescriptor myConceptResult = createDescriptorForResult();
  /*package*/ final ConceptDescriptor myConceptSignature = createDescriptorForSignature();
  /*package*/ final ConceptDescriptor myConceptType = createDescriptorForType();
  /*package*/ final EnumerationDescriptor myEnumerationValueTypes = new EnumerationDescriptor_ValueTypes();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptExpression, myConceptIdentifier, myConceptImport, myConceptModule, myConceptParameter, myConceptResult, myConceptSignature, myConceptType);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Expression:
        return myConceptExpression;
      case LanguageConceptSwitch.Identifier:
        return myConceptIdentifier;
      case LanguageConceptSwitch.Import:
        return myConceptImport;
      case LanguageConceptSwitch.Module:
        return myConceptModule;
      case LanguageConceptSwitch.Parameter:
        return myConceptParameter;
      case LanguageConceptSwitch.Result:
        return myConceptResult;
      case LanguageConceptSwitch.Signature:
        return myConceptSignature;
      case LanguageConceptSwitch.Type:
        return myConceptType;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationValueTypes);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WebAssembly", "Expression", 0x3858ffa4421444acL, 0x99984ee1e7b8b797L, 0x6dd923024fe30eb4L);
    b.interface_();
    b.origin("r:c0f59883-361d-4b09-be24-39e7ad8052de(WebAssembly.structure)/7915396312917544628");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIdentifier() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WebAssembly", "Identifier", 0x3858ffa4421444acL, 0x99984ee1e7b8b797L, 0x6060032ce0977b6fL);
    b.class_(false, false, false);
    b.origin("r:c0f59883-361d-4b09-be24-39e7ad8052de(WebAssembly.structure)/6944554116686773103");
    b.version(2);
    b.property("value", 0x6060032ce0977b70L).type(PrimitiveTypeId.STRING).origin("6944554116686773104").done();
    b.alias("id");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImport() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WebAssembly", "Import", 0x3858ffa4421444acL, 0x99984ee1e7b8b797L, 0x6dd923024fe00a4eL);
    b.class_(false, false, false);
    b.parent(0x3858ffa4421444acL, 0x99984ee1e7b8b797L, 0x6dd923024fe30eb4L);
    b.origin("r:c0f59883-361d-4b09-be24-39e7ad8052de(WebAssembly.structure)/7915396312917346894");
    b.version(2);
    b.property("module", 0x6dd923024fe00a4fL).type(PrimitiveTypeId.STRING).origin("7915396312917346895").done();
    b.property("function", 0x6dd923024fe00a51L).type(PrimitiveTypeId.STRING).origin("7915396312917346897").done();
    b.aggregate("id", 0x379c1cbabecaa53dL).target(0x3858ffa4421444acL, 0x99984ee1e7b8b797L, 0x6060032ce0977b6fL).optional(true).ordered(true).multiple(false).origin("4007109356843345213").done();
    b.aggregate("signature", 0x6dd923024fe00a54L).target(0x3858ffa4421444acL, 0x99984ee1e7b8b797L, 0x6dd923024fde600aL).optional(false).ordered(true).multiple(false).origin("7915396312917346900").done();
    b.alias("import");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WebAssembly", "Module", 0x3858ffa4421444acL, 0x99984ee1e7b8b797L, 0x2b6ee5a45d33423dL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:c0f59883-361d-4b09-be24-39e7ad8052de(WebAssembly.structure)/3129691285170111037");
    b.version(2);
    b.aggregate("expressions", 0x6dd923024fe30ec3L).target(0x3858ffa4421444acL, 0x99984ee1e7b8b797L, 0x6dd923024fe30eb4L).optional(true).ordered(true).multiple(true).origin("7915396312917544643").done();
    b.alias("module");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WebAssembly", "Parameter", 0x3858ffa4421444acL, 0x99984ee1e7b8b797L, 0x1759765b97fc1f1L);
    b.class_(false, false, false);
    b.origin("r:c0f59883-361d-4b09-be24-39e7ad8052de(WebAssembly.structure)/105156629472723441");
    b.version(2);
    b.property("type", 0x1e186fe05c7a46bcL).type(MetaIdFactory.dataTypeId(0x3858ffa4421444acL, 0x99984ee1e7b8b797L, 0x1e186fe05c7a4625L)).origin("2168606229993768636").done();
    b.alias("parameter");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForResult() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WebAssembly", "Result", 0x3858ffa4421444acL, 0x99984ee1e7b8b797L, 0x1e186fe05c7a4640L);
    b.class_(false, false, false);
    b.origin("r:c0f59883-361d-4b09-be24-39e7ad8052de(WebAssembly.structure)/2168606229993768512");
    b.version(2);
    b.property("type", 0x1e186fe05c7a4641L).type(MetaIdFactory.dataTypeId(0x3858ffa4421444acL, 0x99984ee1e7b8b797L, 0x1e186fe05c7a4625L)).origin("2168606229993768513").done();
    b.alias("result");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSignature() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WebAssembly", "Signature", 0x3858ffa4421444acL, 0x99984ee1e7b8b797L, 0x6dd923024fde600aL);
    b.class_(false, false, false);
    b.origin("r:c0f59883-361d-4b09-be24-39e7ad8052de(WebAssembly.structure)/7915396312917237770");
    b.version(2);
    b.aggregate("parameters", 0x6dd923024fde600bL).target(0x3858ffa4421444acL, 0x99984ee1e7b8b797L, 0x1759765b97fc1f1L).optional(true).ordered(true).multiple(true).origin("7915396312917237771").done();
    b.aggregate("results", 0x6dd923024fde600dL).target(0x3858ffa4421444acL, 0x99984ee1e7b8b797L, 0x1e186fe05c7a4640L).optional(true).ordered(true).multiple(false).origin("7915396312917237773").done();
    b.alias("signature");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WebAssembly", "Type", 0x3858ffa4421444acL, 0x99984ee1e7b8b797L, 0x1e186fe05c7a4633L);
    b.class_(false, false, false);
    b.parent(0x3858ffa4421444acL, 0x99984ee1e7b8b797L, 0x6dd923024fe30eb4L);
    b.origin("r:c0f59883-361d-4b09-be24-39e7ad8052de(WebAssembly.structure)/2168606229993768499");
    b.version(2);
    b.aggregate("id", 0x379c1cbabeca192eL).target(0x3858ffa4421444acL, 0x99984ee1e7b8b797L, 0x6060032ce0977b6fL).optional(true).ordered(true).multiple(false).origin("4007109356843309358").done();
    b.aggregate("signature", 0x6dd923024fde6010L).target(0x3858ffa4421444acL, 0x99984ee1e7b8b797L, 0x6dd923024fde600aL).optional(false).ordered(true).multiple(false).origin("7915396312917237776").done();
    b.alias("type");
    return b.create();
  }
}
